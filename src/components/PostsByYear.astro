---
import type { CollectionEntry } from 'astro:content';
import PostItem from './PostItem.astro';

type BlogPost = CollectionEntry<'blog'>;
const { posts } = Astro.props;

function groupPostsByYear(posts: BlogPost[]) {
  const grouped = posts.reduce((acc, post) => {
    const year = post.data.pubDate.getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {} as Record<number, BlogPost[]>);

  return Object.entries(grouped)
    .sort(([a], [b]) => Number(b) - Number(a))
    .map(([year, posts]) => ({
      year: Number(year),
      posts: posts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()),
    }));
}

const groupedPosts = groupPostsByYear(posts);


---

<div class="posts-container">
  {groupedPosts.map(({ year, posts }) => (
    <div class="mb-12 year-section">
      <h2 class="text-3xl font-bold mb-6 text-amber-400">{year}</h2>
      <div class="posts-grid">
        {posts.map((post: BlogPost, index: number) => (
          <div style={`animation-delay: ${index * 0.1}s`}>
            <PostItem post={post} />
          </div>
        ))}
      </div>
    </div>
  ))}
</div>

<style>
  /* ======= Estilos generales ======= */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .year-section {
    animation: fadeIn 1s ease forwards;
  }
  
  .year-title {
    position: relative;
    display: inline-block;
    padding-bottom: 0.5rem;
    margin-bottom: 1.5rem !important;
  }
  
  .year-title::after {
    content: "_";
    color: #a855f7;
    animation: blink 1.2s infinite;
  }
  
  /* .year-title::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #fbbf24, #a855f7);
    border-radius: 2px;
  }
   */
  @keyframes blink {
    50% { opacity: 0; }
  }

  /* ======= Vista por defecto (Lista) ======= */
  .posts-grid {
    display: flex;
    flex-direction: column;
  }

  /* ======= Vista Grid (Cuadr√≠cula) ======= */
  .posts-container.grid-view .posts-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1rem;
  }

  @media (min-width: 640px) {
    .posts-container.grid-view .posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .posts-container.grid-view .posts-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  /* Ajustes para posts en vista grid */
  .posts-container.grid-view :global(.post-badge) {
    min-height: 200px;
  }

  .posts-container.grid-view :global(.post-content) {
    min-height: 200px;
  }
</style>
